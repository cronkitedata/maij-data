---
title: "File management and Github starter"
date:  "2023-01-19"
description: "Week 3: File managemant and optional Github tutorial"
--- 


## Review: Organizing your computer with folders

Last year, The Verge sent a shiver through the spines of professors everywhere with the piece called "[File Not Found](https://www.theverge.com/22684730/students-file-folder-directory-structure-education-gen-z)", which chronicled the way Zoomers grew up using computers --- with search. Historically, anyone who used a computer had to understand how they were organized and how to use folders. But powerful search engines both in the cloud and on your computer made that unnecessary. With that change came a huge roadblock to learning how to code -- creating and navigating to a folder became an unfamiliar concept. 

Computer programs are dumb. They don't have search -- all they see are file names, prefaced by the names of the folders that contain them. 

On a Mac, everything begins in your "home" directory -- the folder that contains all of the things specific to you when you open up the computer.  When we use R, RStudio and Github, it will become crucial that you understand how the computer sees your files, and how you can find them yourself. 

Here are two introductory videos about folder and files: 

* [Windows](https://youtu.be/HDmwiJxzIrw)
* [Macs](https://youtu.be/3TAEC-1YUZw)

Key points: 

* Set up folders in your documents folder for our class --- if we put everything in the same place called the same thing, you'll always be able to follow along with tutorials and in class. 
* How to rename files  [on a Mac](https://themacbeginner.com/rename-files-and-folders-in-mac-osx/) and on [Windows](https://www.teachucomp.com/how-to-rename-files-and-folders-in-windows-11-instructions/). This will be useful when you download. 
* Moving vs. copying files across folders
* Backing up your work
* Style guide for naming conventions: "[How to Name Files](https://speakerdeck.com/jennybc/how-to-name-files?)" from Jenny Bryant

::: {.figure}
![xkcd](https://imgs.xkcd.com/comics/documents.png)
:::

## Setting up the Github repository for this class - OPTIONAL 

If you want to get ahead in data journalism, you'll be expected to have presence on the code sharing site called Github. Each project in Github is called a `repository` or `repo`. I'll hold an optional lab for anyone who wants to start working in Github for this class. If you do it, you'll get used to working with git and Github, and I'll have an easier time helping you if you get stuck on a coding problem. But I'll also distribute all of the homework via Canvas, and you can upload either your code directly to Canvas OR a github link. 


1. Create a folder for your R projects
  
  Within your Documents folder (which exists in both Windows and Macs), create a folder for this class called "mco510".  

2. Open a browser and sign into github using the credentials you set up before class. 

3. Go to https://github.com/mco510/mco510-code  , and press the button that says "Use this template" . That will bring you to a window that looks something like this: 

![](../assets/img/github-template.png)

After you submit it, you should be taken to your account's version of the repo. You can tell because the "Use this template" will be gone. 

4. Look under "Settings" and look for the "Access" sidebar. Add your instructor (and anyone else you want to share with) as a collaborator. My email for github is `sarah.h.cohen@asu.edu` 

5. Open Github Desktop on your computer, and sign in if necessary. Under the File menu, choose "Clone a Repository" and choose the one that you just created. Make sure to save it as a folder your mco510 folder that you just created. It might look like it's just a list of folders, but it also has a hidden file called .git, which keeps track of things as you want it to. (It will track differences between "commits" -- TMI. )

At the end of the workshop, you'll see how to upload your changes to the repo. 

### Using Github Desktop

If you use this method, you don't have to worry that you've uploaded an incomplete file, or that your computer is out of sync with your repo. However if you get a message telling you that you have sync conflict, contact me right away. You don't want to lose any of your work.  

* Open Github Desktop
* Choose "Add repository" from the file menu if it's not already shown as the "Current repository". Choose the "Fetch origin" button just to make sure you have all of the updates that might have been made online. 
* At the bottom of the window, there is a box for "Summary (required)" -- this just tells you which version of your repo it is. It's like a name for this version. It might be "Filter homework" or "updated replication project"
* Then "commit to main"
* Then make sure to press the button at the top called "Push origin"  

When you open your online version of Github, your changes will be there. 



