---
title: "Mutate prelab"
author: "YOUR NAME HERE"
format: 
  html: 
    theme: cosmo
    embed-resources:  true
    toc: true
    code-tools: true
    df-print: paged
---

This prelab goes along with  [Verbs in Depth part 2: Mutate](https://cronkitedata.github.io/djtextbook/r-verb-mutate.html) . You should follow along with the explanations and details in the textbook as you walk through this prelab.

## Load data

You can examine in the Environment tab or by previewing the table, or by "glimpsing" it here. It's up to you.

```{r}
#| label: setup
#| warning: false
#| message: false


library(tidyverse)
library(janitor)
library(lubridate)



```


This time, just pick out the columns without creating an interim data frame from the saved data:

```{r}

ppp_small <- readRDS ( url ( "https://cronkitedata.s3.amazonaws.com/rdata/ppp_az_loans.RDS" ) |>
             select (borrower_name, borrower_address, borrower_city,
                    project_county, date_approved, amount, 
                    forgiveness_amount)


```


Add a code chunk here to take check the data: 
 
## Mutate

Describe in your own words what this code chunk does:

```{r}

ppp_orig |>
  mutate ( amt_diff =  forgiveness_amount-amount, 
           amt_pct_diff = amt_diff / amount  * 100 ) |>                   
  select ( borrower_name, borrower_city, amount, forgiveness_amount) |>   
  head(5)                                                                


```

To fix the missing data, we'll turn everything that is missing into zero (we know that that is the correct thing to do in this case.) . Fill in the blank to make that happen:

```{r}

ppp_forgiven_fixed <- 
  ppp_orig |> 
  mutate ( forgiveness_amount = replace_na ( __________________, 0 ))




```

This compares the amount forgiven with the average and median amount for the entire state. We have eliminated the missing values in the forgiven amount, so we don't have to worry about them anymore. Run this code and examine the output:

```{r}

ppp_forgiven_fixed |> 
  mutate ( avg_forgiven = mean(forgiveness_amount), 
           median_forgiven = median(forgiveness_amount)) |> 
  select (borrower_name, forgiveness_amount, avg_forgiven, median_forgiven ) |> 
  head()



```

### Categorizing text using conditional statements

First, try this simple conversion to create a category of "small" versus "large" loan. I added a new function called `sample_n()`, which lets you take a random sample of your data rather than look at it from the top or bottom. :

```{r}

ppp_orig |>
   mutate ( large_small = if_else (
                               amount >= 50000, 
                               "Large", 
                               "Small" 
                         )
   ) |>
   select ( borrower_name, amount, large_small  ) |>
   sample_n (100)


```

This is a more complicated example. Fill in the blank to fix this statement:

```{r}

ppp_category_indiv <- 
  ppp_forgiven_fixed |>
  mutate ( is_individual = 
              if_else ( ______________ %in% 
                          c(
                            "Independent Contractors", 
                            "Sole Proprietorship", 
                            "Self-Employed Individuals", 
                            "Single Member LLC"
                            ), 
                    "Individual", 
                    "Organization"
                    ) 
  )  






```

-   Why do you use the `%in%` operator and the `c()` function in this phrase?

Try looking at a sample of the items to see whether it worked.

```{r}

ppp_category_indiv |>
   select ( is_individual, business_type, amount) |>
   sample_n ( 100 )




```

Now it's your turn to start from scratch, using the information from the textbook.

-   Create a new code chunk.

-   Start with the ppp_category_indiv data frame, AND THEN

-   Use the `mutate` function to create a new column called `category_nonprofit` by looking for variations on "non profit" in the `business_type` column, using the `str_like()` function to distinguish non-profit organizations. This is shown in the textbook here: <https://cronkitedata.github.io/djtextbook/r-verb-mutate.html#two-categories-using-fuzzy-matching>

### Thoughts on mutate

Write out three things that you want to remember or want clarified about the `mutate` verb.

1.

2.

3.
